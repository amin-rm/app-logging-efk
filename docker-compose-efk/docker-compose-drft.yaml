version: '3.8'

services:
  es01:
    container_name: es01
    image: elasticsearch:${ELASTIC_VERSION}
    restart: always
    volumes:
      - ./elasticsearch/data/es01:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/config/jvm.options.d/heap.options:/usr/share/elasticsearch/config/jvm.options.d/heap.options
      - ./elasticsearch/config/certs:/usr/share/elasticsearch/config/certs  # Mount certs directory
    ports:
      - ${ES01_HTTP_PORT}:9200
      - ${ES01_TCP_PORT}:9300
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.path=config/certs/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=config/certs/elastic-certificates.p12
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - efk
    ulimits:
      memlock:
        soft: -1
        hard: -1
    command: >
      bash -c '
        if [ ! -f /usr/share/elasticsearch/config/certs/elastic-certificates.p12 ]; then
          echo "Creating certificates";
          bin/elasticsearch-certutil ca --silent -out /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12;
          echo "Creating node certificates";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es02\n"\
          "    dns:\n"\
          "      - es02\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es03\n"\
          "    dns:\n"\
          "      - es03\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > /usr/share/elasticsearch/config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent -out /usr/share/elasticsearch/config/certs/elastic-certificates.p12 --in /usr/share/elasticsearch/config/certs/instances.yml --ca /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12;
        fi;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12 https://localhost:9200; do sleep 30; done;
        echo "Elasticsearch setup completed!";
        exec /usr/local/bin/docker-entrypoint.sh eswrapper;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/elastic-certificates.p12 ]"]
      interval: 10s
      timeout: 5s
      retries: 12

  es02:
    container_name: es02
    image: elasticsearch:${ELASTIC_VERSION}
    restart: always
    volumes:
      - ./elasticsearch/data/es02:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/config/jvm.options.d/heap.options:/usr/share/elasticsearch/config/jvm.options.d/heap.options
      - ./elasticsearch/config/certs:/usr/share/elasticsearch/config/certs  # Mount certs directory
    ports:
      - ${ES02_HTTP_PORT}:9200
      - ${ES02_TCP_PORT}:9300
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.path=config/certs/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=config/certs/elastic-certificates.p12
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - efk
    ulimits:
      memlock:
        soft: -1
        hard: -1
    command: >
      bash -c '
        if [ ! -f /usr/share/elasticsearch/config/certs/elastic-certificates.p12 ]; then
          echo "Creating certificates";
          bin/elasticsearch-certutil ca --silent -out /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12;
          echo "Creating node certificates";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es02\n"\
          "    dns:\n"\
          "      - es02\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es03\n"\
          "    dns:\n"\
          "      - es03\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > /usr/share/elasticsearch/config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent -out /usr/share/elasticsearch/config/certs/elastic-certificates.p12 --in /usr/share/elasticsearch/config/certs/instances.yml --ca /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12;
        fi;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12 https://localhost:9200; do sleep 30; done;
        echo "Elasticsearch setup completed!";
        exec /usr/local/bin/docker-entrypoint.sh eswrapper;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/elastic-certificates.p12 ]"]
      interval: 10s
      timeout: 5s
      retries: 12

  es03:
    container_name: es03
    image: elasticsearch:${ELASTIC_VERSION}
    restart: always
    volumes:
      - ./elasticsearch/data/es03:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/config/jvm.options.d/heap.options:/usr/share/elasticsearch/config/jvm.options.d/heap.options
      - ./elasticsearch/config/certs:/usr/share/elasticsearch/config/certs  # Mount certs directory
    ports:
      - ${ES03_HTTP_PORT}:9200
      - ${ES03_TCP_PORT}:9300
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.path=config/certs/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=config/certs/elastic-certificates.p12
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - efk
    ulimits:
      memlock:
        soft: -1
        hard: -1
    command: >
      bash -c '
        if [ ! -f /usr/share/elasticsearch/config/certs/elastic-certificates.p12 ]; then
          echo "Creating certificates";
          bin/elasticsearch-certutil ca --silent -out /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12;
          echo "Creating node certificates";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es02\n"\
          "    dns:\n"\
          "      - es02\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es03\n"\
          "    dns:\n"\
          "      - es03\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > /usr/share/elasticsearch/config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent -out /usr/share/elasticsearch/config/certs/elastic-certificates.p12 --in /usr/share/elasticsearch/config/certs/instances.yml --ca /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12;
        fi;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert /usr/share/elasticsearch/config/certs/elastic-stack-ca.p12 https://localhost:9200; do sleep 30; done;
        echo "Elasticsearch setup completed!";
        exec /usr/local/bin/docker-entrypoint.sh eswrapper;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/elastic-certificates.p12 ]"]
      interval: 10s
      timeout: 5s
      retries: 12

  kibana:
    depends_on:
      - es01
      - es02
      - es03
    container_name: kibana
    image: kibana:${ELASTIC_VERSION}
    restart: always
    volumes:
      - ./kibana/data:/usr/share/kibana/data
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - efk

  fluentd:
    depends_on:
      - es01
      - es02
      - es03
    container_name: fluentd
    build: ./fluentd
    restart: always
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - ${FLUENTD_PORT}:9880
    networks:
      - efk

networks:
  efk:
    driver: bridge
